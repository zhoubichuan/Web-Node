(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{200:function(t,a,r){"use strict";r.r(a);var e=r(0),s=Object(e.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"_9-种数据类型区别及相互转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-种数据类型区别及相互转换"}},[t._v("#")]),t._v(" 9 种数据类型区别及相互转换")]),t._v(" "),r("h2",{attrs:{id:"javascript的基本数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript的基本数据类型"}},[t._v("#")]),t._v(" JavaScript的基本数据类型")]),t._v(" "),r("ul",[r("li",[t._v("基本数据类型：Number、String、Boolean、Undefined、Null")]),t._v(" "),r("li",[t._v("object是JavaScript中所有对象的父对象")]),t._v(" "),r("li",[t._v("数据封装类对象：object、Array、Boolean、Number和String")]),t._v(" "),r("li",[t._v("其他对象：Function、Arguments、Math、Data、Error和RegExp")]),t._v(" "),r("li",[t._v("其他数据类型：Symbol")])]),t._v(" "),r("h2",{attrs:{id:"数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),r("h3",{attrs:{id:"map"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" map")]),t._v(" "),r("p",[t._v("遍历数组，返回回调返回值组成的新数组")]),t._v(" "),r("h3",{attrs:{id:"foreach"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#foreach"}},[t._v("#")]),t._v(" forEach")]),t._v(" "),r("p",[t._v("无法break,可以用try/catch中throw new Error来停止")]),t._v(" "),r("h3",{attrs:{id:"filter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[t._v("#")]),t._v(" filter")]),t._v(" "),r("p",[t._v("过滤")]),t._v(" "),r("h3",{attrs:{id:"some"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#some"}},[t._v("#")]),t._v(" some")]),t._v(" "),r("p",[t._v("有一项返回true，则整体为true")]),t._v(" "),r("h3",{attrs:{id:"every"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#every"}},[t._v("#")]),t._v(" every")]),t._v(" "),r("p",[t._v("有一项返回false，则整体为false")]),t._v(" "),r("h3",{attrs:{id:"join"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[t._v("#")]),t._v(" join")]),t._v(" "),r("p",[t._v("通过制定连接符生成字符串")]),t._v(" "),r("h3",{attrs:{id:"push-pop"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#push-pop"}},[t._v("#")]),t._v(" push/pop")]),t._v(" "),r("p",[t._v("末尾推入和弹出，改变原数组，返回推入/弹出项")]),t._v(" "),r("h3",{attrs:{id:"unshift-shift"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#unshift-shift"}},[t._v("#")]),t._v(" unshift/shift")]),t._v(" "),r("p",[t._v("头部推入和弹出，改变原数组，返回操作项")]),t._v(" "),r("h3",{attrs:{id:"sort-fn-reverse"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sort-fn-reverse"}},[t._v("#")]),t._v(" sort(fn)/reverse")]),t._v(" "),r("p",[t._v("排序与反转，改变原数组")]),t._v(" "),r("h3",{attrs:{id:"concat"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#concat"}},[t._v("#")]),t._v(" concat")]),t._v(" "),r("p",[t._v("连接数组，不影响原数组，浅拷贝")]),t._v(" "),r("h3",{attrs:{id:"slice-start-end"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#slice-start-end"}},[t._v("#")]),t._v(" slice(start,end)")]),t._v(" "),r("p",[t._v("返回截断后的新数组，不改变原数组")]),t._v(" "),r("h3",{attrs:{id:"splice-start-number-value"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#splice-start-number-value"}},[t._v("#")]),t._v(" splice(start,number,value...)")]),t._v(" "),r("p",[t._v("返回删除元素组成的数组，value为插入项，改变原数组")]),t._v(" "),r("h3",{attrs:{id:"indexof-lastindexof-value-fromindex"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#indexof-lastindexof-value-fromindex"}},[t._v("#")]),t._v(" indexOf/lastIndexOf(value,fromIndex)")]),t._v(" "),r("p",[t._v("查找数组项，返回对应的下标")]),t._v(" "),r("h3",{attrs:{id:"reduce-reduceright-fn-pre-cur-defaultprev"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reduce-reduceright-fn-pre-cur-defaultprev"}},[t._v("#")]),t._v(" reduce/reduceRight(fn(pre,cur),defaultPrev)")]),t._v(" "),r("p",[t._v("两两执行，prev为上次化简函数的return值，cur为当前值（从第二项开始）")])])}],!1,null,null,null);a.default=s.exports}}]);